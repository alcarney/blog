<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>js on Alex Carney</title>
    <link>https://alcarney.me/tags/js/</link>
    <description>Recent content in js on Alex Carney</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://alcarney.me/tags/js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Passing strings between TinyGo and JavaScript</title>
      <link>https://alcarney.me/blog/2020/passing-strings-between-tinygo-wasm/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://alcarney.me/blog/2020/passing-strings-between-tinygo-wasm/</guid>
      <description>&lt;p&gt;After getting a &lt;a href=&#34;https://alcarney.me/blog/2020/hello-world-tinygo-wasm/&#34;&gt;&amp;ldquo;Hello, World!&amp;quot;&lt;/a&gt; WebAssembly
application working I thought it would be fun to try and implement a toy programming
language in the browser. However before I could even start thinking about parsers,
abstract syntax trees and the like I had to be able to pass strings between my
WebAssembly module and the surrounding JavaScript.&lt;/p&gt;
&lt;p&gt;Turns out that is much trickier than I expected.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementing Click &amp; Drag with Vanilla JS</title>
      <link>https://alcarney.me/blog/2019/click-drag-vanilla-js/</link>
      <pubDate>Sun, 07 Jul 2019 21:24:00 +0100</pubDate>
      
      <guid>https://alcarney.me/blog/2019/click-drag-vanilla-js/</guid>
      <description>&lt;figure&gt;
  &lt;div id=&#34;main&#34;&gt;&lt;/div&gt;
  &lt;figcaption&gt;
    &lt;p&gt;Try clicking and dragging on this circle.&lt;/p&gt;
  &lt;/figcaption&gt;
&lt;/figure&gt;
&lt;script type=&#34;text/javascript&#34; src=&#34;https://alcarney.me/js/click-drag.js&#34;&gt;&lt;/script&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This post makes use of a number of interactive elements to help illustrate a few
concepts. Unfortunately these do not yet work on mobile devices - sorry mobile
users!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have for quite some time now wanted to play around with web development some
more, particularly using web technologies to build user interfaces of some
kind. However there is just &lt;strong&gt;so much&lt;/strong&gt; out there it&amp;rsquo;s been impossible for me to
really get anywhere past a &amp;ldquo;Hello, World!&amp;rdquo; tutorial before I find myself trying
out the next new shiny.&lt;/p&gt;
&lt;p&gt;So I&amp;rsquo;ve decided to abandon everything and try a bottom up approach where I see
how far I can push the core web technologies - HTML, CSS and
JavaScript. Hopefully then by the time I start using one of the gazillion
libraries out there I will have a better understanding of why I
needed it in the first place.&lt;/p&gt;
&lt;p&gt;In this post I will be looking at implementing clicking and dragging
functionality using only vanilla JavaScript. Clicking and dragging as a concept
can apply to many kinds of interactions so in this instance I&amp;rsquo;m specifically
referring to clicking on an SVG element moving it around on the page as
illustrated by the demo above.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing npm packages globally without root</title>
      <link>https://alcarney.me/notes/npm-global-user-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alcarney.me/notes/npm-global-user-install/</guid>
      <description>  Create a folder for global packages to be install into
$ mdkir &amp;#34;${HOME}/.npm-packages&amp;#34;    Tell npm to use this folder
$ npm config set prefix &amp;#34;${HOME}/.npm-packages&amp;#34;    Add the corresponding ${HOME}/.npm-packages/bin folder to your PATH
  </description>
    </item>
    
  </channel>
</rss>
